{"ast":null,"code":"var _jsxFileName = \"E:\\\\PG\\\\excel-bill-manage\\\\client\\\\src\\\\components\\\\FileUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport * as XLSX from 'xlsx';\nimport { useAuth } from '../context/AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst FileUpload = ({\n  onDataProcessed\n}) => {\n  _s();\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const {\n    user\n  } = useAuth();\n  const handleFileChange = event => {\n    setSelectedFile(event.target.files[0]);\n  };\n  const processExcelFile = file => {\n    return new Promise((resolve, reject) => {\n      const reader = new FileReader();\n      reader.onload = e => {\n        try {\n          const data = new Uint8Array(e.target.result);\n          const workbook = XLSX.read(data, {\n            type: 'array'\n          });\n          const sheetName = workbook.SheetNames[0];\n          const worksheet = workbook.Sheets[sheetName];\n          const jsonData = XLSX.utils.sheet_to_json(worksheet);\n          console.log('Raw Excel Data:', jsonData); // Debugging জন্য\n\n          // আপনার Excel structure অনুযায়ী data process করুন\n          const items = jsonData.map((item, index) => {\n            // Column names বাংলায় আছে, তাই সেই অনুযায়ী access করুন\n            const customerName = item['__EMPTY'] || item['Customer Name'] || item['নাম'] || `Customer ${index + 1}`;\n            const phone = item['__EMPTY_1'] || item['Phone'] || item['ফোন'] || '';\n            const product = item['__EMPTY_2'] || item['Product'] || item['পণ্য'] || '';\n            const amount = parseFloat(item['__EMPTY_3'] || item['Amount'] || item['পরিমাণ'] || 0);\n            return {\n              id: index + 1,\n              customerName: customerName,\n              phone: phone,\n              product: product,\n              price: amount,\n              quantity: 1,\n              // Default quantity 1\n              discount: 0,\n              // Default discount 0%\n              total: amount // Initially total = amount\n            };\n          });\n\n          // Filter out empty rows\n          const filteredItems = items.filter(item => item.customerName && item.customerName !== 'Customer Name' && item.price > 0);\n          console.log('Processed Items:', filteredItems); // Debugging জন্য\n\n          const grandTotal = filteredItems.reduce((sum, item) => sum + item.total, 0);\n          resolve({\n            items: filteredItems,\n            grandTotal\n          });\n        } catch (error) {\n          reject(error);\n        }\n      };\n      reader.onerror = error => reject(error);\n      reader.readAsArrayBuffer(file);\n    });\n  };\n  const handleUpload = async () => {\n    if (!selectedFile) {\n      alert('দয়া করে একটি ফাইল নির্বাচন করুন');\n      return;\n    }\n    setUploading(true);\n    try {\n      const result = await processExcelFile(selectedFile);\n      if (result.items.length === 0) {\n        alert('ফাইলে কোনো ডেটা পাওয়া যায়নি। দয়া করে ফাইল চেক করুন।');\n        return;\n      }\n      onDataProcessed(result.items, result.grandTotal);\n      alert('ফাইল সফলভাবে প্রসেস করা হয়েছে!');\n    } catch (error) {\n      console.error('File processing error:', error);\n      alert('ফাইল প্রসেসিং ব্যর্থ হয়েছে: ' + error.message);\n    } finally {\n      setUploading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"\\u098F\\u0995\\u09CD\\u09B8\\u09C7\\u09B2 \\u09AB\\u09BE\\u0987\\u09B2 \\u0986\\u09AA\\u09B2\\u09CB\\u09A1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-group\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"\\u098F\\u0995\\u09CD\\u09B8\\u09C7\\u09B2 \\u09AB\\u09BE\\u0987\\u09B2 \\u09A8\\u09BF\\u09B0\\u09CD\\u09AC\\u09BE\\u099A\\u09A8 \\u0995\\u09B0\\u09C1\\u09A8 (.xlsx, .xls, .csv):\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \".xlsx, .xls, .csv\",\n        onChange: handleFileChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), selectedFile && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u09A8\\u09BF\\u09B0\\u09CD\\u09AC\\u09BE\\u099A\\u09BF\\u09A4 \\u09AB\\u09BE\\u0987\\u09B2: \", selectedFile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"\\u09AB\\u09BE\\u0987\\u09B2\\u09C7\\u09B0 \\u09B8\\u09BE\\u0987\\u099C: \", (selectedFile.size / 1024).toFixed(2), \" KB\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"btn btn-primary\",\n      onClick: handleUpload,\n      disabled: !selectedFile || uploading,\n      children: uploading ? 'প্রসেস হচ্ছে...' : 'ফাইল প্রসেস করুন'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n};\n_s(FileUpload, \"SmxW7epeR3EvppDy0fHn8r4p7Ss=\", false, function () {\n  return [useAuth];\n});\n_c = FileUpload;\nexport default FileUpload;\nvar _c;\n$RefreshReg$(_c, \"FileUpload\");","map":{"version":3,"names":["React","useState","XLSX","useAuth","jsxDEV","_jsxDEV","FileUpload","onDataProcessed","_s","selectedFile","setSelectedFile","uploading","setUploading","user","handleFileChange","event","target","files","processExcelFile","file","Promise","resolve","reject","reader","FileReader","onload","e","data","Uint8Array","result","workbook","read","type","sheetName","SheetNames","worksheet","Sheets","jsonData","utils","sheet_to_json","console","log","items","map","item","index","customerName","phone","product","amount","parseFloat","id","price","quantity","discount","total","filteredItems","filter","grandTotal","reduce","sum","error","onerror","readAsArrayBuffer","handleUpload","alert","length","message","className","children","fileName","_jsxFileName","lineNumber","columnNumber","accept","onChange","name","size","toFixed","onClick","disabled","_c","$RefreshReg$"],"sources":["E:/PG/excel-bill-manage/client/src/components/FileUpload.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport * as XLSX from 'xlsx';\r\nimport { useAuth } from '../context/AuthContext';\r\n\r\nconst FileUpload = ({ onDataProcessed }) => {\r\n  const [selectedFile, setSelectedFile] = useState(null);\r\n  const [uploading, setUploading] = useState(false);\r\n  const { user } = useAuth();\r\n\r\n  const handleFileChange = (event) => {\r\n    setSelectedFile(event.target.files[0]);\r\n  };\r\n\r\n  const processExcelFile = (file) => {\r\n    return new Promise((resolve, reject) => {\r\n      const reader = new FileReader();\r\n      \r\n      reader.onload = (e) => {\r\n        try {\r\n          const data = new Uint8Array(e.target.result);\r\n          const workbook = XLSX.read(data, { type: 'array' });\r\n          const sheetName = workbook.SheetNames[0];\r\n          const worksheet = workbook.Sheets[sheetName];\r\n          const jsonData = XLSX.utils.sheet_to_json(worksheet);\r\n          \r\n          console.log('Raw Excel Data:', jsonData); // Debugging জন্য\r\n\r\n          // আপনার Excel structure অনুযায়ী data process করুন\r\n          const items = jsonData.map((item, index) => {\r\n            // Column names বাংলায় আছে, তাই সেই অনুযায়ী access করুন\r\n            const customerName = item['__EMPTY'] || item['Customer Name'] || item['নাম'] || `Customer ${index + 1}`;\r\n            const phone = item['__EMPTY_1'] || item['Phone'] || item['ফোন'] || '';\r\n            const product = item['__EMPTY_2'] || item['Product'] || item['পণ্য'] || '';\r\n            const amount = parseFloat(item['__EMPTY_3'] || item['Amount'] || item['পরিমাণ'] || 0);\r\n\r\n            return {\r\n              id: index + 1,\r\n              customerName: customerName,\r\n              phone: phone,\r\n              product: product,\r\n              price: amount,\r\n              quantity: 1, // Default quantity 1\r\n              discount: 0, // Default discount 0%\r\n              total: amount // Initially total = amount\r\n            };\r\n          });\r\n\r\n          // Filter out empty rows\r\n          const filteredItems = items.filter(item => \r\n            item.customerName && item.customerName !== 'Customer Name' && item.price > 0\r\n          );\r\n\r\n          console.log('Processed Items:', filteredItems); // Debugging জন্য\r\n\r\n          const grandTotal = filteredItems.reduce((sum, item) => sum + item.total, 0);\r\n          \r\n          resolve({ items: filteredItems, grandTotal });\r\n        } catch (error) {\r\n          reject(error);\r\n        }\r\n      };\r\n      \r\n      reader.onerror = (error) => reject(error);\r\n      reader.readAsArrayBuffer(file);\r\n    });\r\n  };\r\n\r\n  const handleUpload = async () => {\r\n    if (!selectedFile) {\r\n      alert('দয়া করে একটি ফাইল নির্বাচন করুন');\r\n      return;\r\n    }\r\n\r\n    setUploading(true);\r\n    \r\n    try {\r\n      const result = await processExcelFile(selectedFile);\r\n      \r\n      if (result.items.length === 0) {\r\n        alert('ফাইলে কোনো ডেটা পাওয়া যায়নি। দয়া করে ফাইল চেক করুন।');\r\n        return;\r\n      }\r\n      \r\n      onDataProcessed(result.items, result.grandTotal);\r\n      alert('ফাইল সফলভাবে প্রসেস করা হয়েছে!');\r\n    } catch (error) {\r\n      console.error('File processing error:', error);\r\n      alert('ফাইল প্রসেসিং ব্যর্থ হয়েছে: ' + error.message);\r\n    } finally {\r\n      setUploading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"card\">\r\n      <h3>এক্সেল ফাইল আপলোড</h3>\r\n      <div className=\"form-group\">\r\n        <label>এক্সেল ফাইল নির্বাচন করুন (.xlsx, .xls, .csv):</label>\r\n        <input \r\n          type=\"file\" \r\n          accept=\".xlsx, .xls, .csv\" \r\n          onChange={handleFileChange}\r\n        />\r\n      </div>\r\n      {selectedFile && (\r\n        <div>\r\n          <p>নির্বাচিত ফাইল: {selectedFile.name}</p>\r\n          <p>ফাইলের সাইজ: {(selectedFile.size / 1024).toFixed(2)} KB</p>\r\n        </div>\r\n      )}\r\n      <button \r\n        className=\"btn btn-primary\" \r\n        onClick={handleUpload}\r\n        disabled={!selectedFile || uploading}\r\n      >\r\n        {uploading ? 'প্রসেস হচ্ছে...' : 'ফাইল প্রসেস করুন'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default FileUpload;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}